cmake_minimum_required(VERSION 3.20)
set(CMAKE_CXX_STANDARD 23)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)
project(MatMul CXX)
set(CMAKE_BUILD_TYPE Release)
set (CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -march=native")
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
execute_process(COMMAND "getconf" "LEVEL1_DCACHE_LINESIZE" OUTPUT_VARIABLE L1DLS)
string(STRIP ${L1DLS} L1DLS)
message("Determined L1D cacheline size = ${L1DLS}")
find_package(TBB REQUIRED)
find_package(xsimd REQUIRED)
set(xsimd_ArchAlternatives sse2 sse3 sse4_1 sse4_2 ssse3 avx avx2 avx512bw avx512cd avx512dq avx512f neon neon64)
set(xsimd_Arch avx2 CACHE STRING "XSIMD target architecture (avx, avx2, avx512f ...")
SET_PROPERTY(CACHE xsimd_Arch PROPERTY STRINGS ${xsimd_ArchAlternatives})
set(progs matmul)
foreach (prog ${progs})
add_executable(${prog} ${prog}.cc)
    target_include_directories(${prog} PRIVATE ${xsimd_INCLUDE_DIRS})
    target_link_libraries(${prog} PRIVATE TBB::tbb TBB::tbbmalloc)
    target_compile_definitions(${prog} PUBLIC -DCACHELINE_SIZE=${L1DLS} -Dxsimd_Arch=xsimd::${xsimd_Arch})
#    target_compile_options(${prog} PUBLIC -funroll-loops -frename-registers -fopenmp)
endforeach()

